{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nidanurgunay/Desktop/cs308/e-commerce-frontend/src/sm_invoices.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Table from 'react-bootstrap/Table';\nimport { BsBoxArrowInRight } from 'react-icons/bs';\nimport tracker from '../src/api/tracker';\nimport basket from './basket';\n\nclass sm_invoices extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = async () => {\n      try {\n        const response = await tracker.get(\"order/all\");\n        const orderarray = response.data;\n        this.setState({\n          orders: orderarray\n        });\n        console.log(\"state\", this.state.orders);\n\n        if (this.state.orders.length !== 0) {\n          var invoices = [];\n          console.log(this.state.orders);\n          var item;\n\n          for (var i = 0; i < this.state.orders.length; i++) {\n            console.log(this.state.orders[i]);\n            const email = this.state.orders[i].email;\n            const status = this.state.orders[i].status;\n            const userid = this.state.orders[i].user;\n            const basketid = this.state.orders[i].basket;\n            const address = this.state.orders[i].address;\n            const id = this.state.orders[i]._id;\n            const date = this.state.orders[i].createdAt;\n            const res = await tracker.get('/basket/' + basketid);\n            console.log(res);\n            const totalprice = res.data.productList.totalprice;\n            console.log(id);\n            item = /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: userid\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: totalprice\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(BsBoxArrowInRight, {\n                  onClick: () => {\n                    this.props.history.push(\"/sm_invoice_details/\" + id);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 25\n            }, this);\n            console.log(item);\n            invoices.push(item);\n          }\n\n          await this.setState({\n            invoices: invoices\n          });\n          await this.setState({\n            isinvoice: true\n          });\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.state = {\n      orders: [],\n      isinvoice: false,\n      invoices: []\n    };\n  }\n\n  /*    getTotalPrice = async (basketid) => {\n          const res = await tracker.get('/basket/' + basketid);\n        \n          console.log(res);\n          const totalprice = res.data.productList.totalprice;\n          await this.setState({ total_price: totalprice });\n          return totalprice;\n      }\n  */\n\n  /*   handleOrders = async () => {\n         try {\n            \n             if (this.state.orders.length !== 0) {\n                 var invoices = [];\n                  console.log(this.state.orders);\n                 var item;\n                 for (var i = 0; i < this.state.orders.length; i++) {\n                     console.log(this.state.orders[i]);\n                     const email = this.state.orders[i].email;\n                     const status = this.state.orders[i].status;\n                     const userid = this.state.orders[i].user;\n                     const basketid = this.state.orders[i].basketid;\n                     const address = this.state.orders[i].address;\n                     const id = this.state.orders[i]._id;\n                    \n                      console.log(id);\n                     item = (\n                         <tr>\n                             <td>{id}</td>\n                             <td>06.01.2021</td>\n                             <td>{email}</td>\n                             <td>{userid}</td>\n                             <td>{this.getTotalPrice(basketid)}</td>\n                             <td>{status}</td>\n                             <td><BsBoxArrowInRight onClick={() => {\n                                 this.props.history.push(\"/sm_invoice_details/\" + id);\n                             }}/></td>\n                         </tr>\n                      );\n                     console.log(item);\n                     invoices.push(item);\n                 }\n                  await this.setState({ invoices: invoices });\n                 await this.setState({ isinvoice: true });\n  \n                 return invoices;\n             }\n         }\n         catch (e) {\n             console.log(e)\n         }\n      }*/\n  status(e) {\n    this.setState({\n      status: e.target.value\n    });\n    console.log(this.state.status);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        responsive: true,\n        striped: true,\n        bordered: true,\n        hover: true,\n        variant: \"dark\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Invoice ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Invoice Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Total Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.isinvoice ? this.state.invoices : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default sm_invoices;","map":{"version":3,"sources":["/Users/nidanurgunay/Desktop/cs308/e-commerce-frontend/src/sm_invoices.js"],"names":["React","Component","Table","BsBoxArrowInRight","tracker","basket","sm_invoices","constructor","componentDidMount","response","get","orderarray","data","setState","orders","console","log","state","length","invoices","item","i","email","status","userid","user","basketid","address","id","_id","date","createdAt","res","totalprice","productList","props","history","push","isinvoice","e","target","value","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Table from 'react-bootstrap/Table';\nimport { BsBoxArrowInRight } from 'react-icons/bs';\nimport tracker from '../src/api/tracker';\nimport basket from './basket';\nclass sm_invoices extends Component {\n    constructor() {\n        super()\n        this.state = {\n            orders: [],\n            isinvoice: false,\n            invoices:[]\n        }\n    }\n\n    componentDidMount = async () => {\n    \n        try {\n            const response = await tracker.get(\"order/all\");\n            const orderarray = response.data;\n            this.setState({ orders: orderarray });\n            console.log(\"state\", this.state.orders);\n\n            if (this.state.orders.length !== 0) {\n                var invoices = [];\n\n                console.log(this.state.orders);\n                var item;\n                for (var i = 0; i < this.state.orders.length; i++) {\n                    console.log(this.state.orders[i]);\n                    const email = this.state.orders[i].email;\n                    const status = this.state.orders[i].status;\n                    const userid = this.state.orders[i].user;\n                    const basketid = this.state.orders[i].basket;\n                    const address = this.state.orders[i].address;\n                    const id = this.state.orders[i]._id;\n                    const date = this.state.orders[i].createdAt;\n                    const res = await tracker.get('/basket/' + basketid);\n\n                    console.log(res);\n                    const totalprice = res.data.productList.totalprice;\n                   \n\n                    console.log(id);\n                    item = (\n                        <tr>\n                            <td>{id}</td>\n                            <td>{date}</td>\n                            <td>{email}</td>\n                            <td>{userid}</td>\n                            <td>{totalprice}</td>\n                            <td>{status}</td>\n                            <td><BsBoxArrowInRight onClick={() => {\n                                this.props.history.push(\"/sm_invoice_details/\" + id);\n                            }} /></td>\n                        </tr>\n\n                    );\n                    console.log(item);\n                    invoices.push(item);\n                }\n\n                await this.setState({ invoices: invoices });\n                await this.setState({ isinvoice: true });\n\n\n              \n            }\n        } catch (e) {\n            console.log(e);\n        }\n\n    }\n/*    getTotalPrice = async (basketid) => {\n        const res = await tracker.get('/basket/' + basketid);\n      \n        console.log(res);\n        const totalprice = res.data.productList.totalprice;\n        await this.setState({ total_price: totalprice });\n        return totalprice;\n    }\n*/\n /*   handleOrders = async () => {\n        try {\n           \n            if (this.state.orders.length !== 0) {\n                var invoices = [];\n\n                console.log(this.state.orders);\n                var item;\n                for (var i = 0; i < this.state.orders.length; i++) {\n                    console.log(this.state.orders[i]);\n                    const email = this.state.orders[i].email;\n                    const status = this.state.orders[i].status;\n                    const userid = this.state.orders[i].user;\n                    const basketid = this.state.orders[i].basketid;\n                    const address = this.state.orders[i].address;\n                    const id = this.state.orders[i]._id;\n                   \n\n                    console.log(id);\n                    item = (\n                        <tr>\n                            <td>{id}</td>\n                            <td>06.01.2021</td>\n                            <td>{email}</td>\n                            <td>{userid}</td>\n                            <td>{this.getTotalPrice(basketid)}</td>\n                            <td>{status}</td>\n                            <td><BsBoxArrowInRight onClick={() => {\n                                this.props.history.push(\"/sm_invoice_details/\" + id);\n                            }}/></td>\n                        </tr>\n\n                    );\n                    console.log(item);\n                    invoices.push(item);\n                }\n\n                await this.setState({ invoices: invoices });\n                await this.setState({ isinvoice: true });\n\n\n                return invoices;\n            }\n        }\n        catch (e) {\n            console.log(e)\n        }\n\n    }*/\n    status(e) {\n        this.setState({ status: e.target.value });\n        console.log(this.state.status);\n    }\n\n    render() {\n        return (\n            <div >\n                <Table responsive striped bordered hover variant=\"dark\">\n                    <thead>\n                        <tr>\n                            <td>Invoice ID</td>\n                            <td>Invoice Date</td>\n                            <td>Email</td>\n                            <td>User</td>\n                            <td>Total Price</td>\n                            <td>Status</td>\n                            <td>Details</td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.isinvoice ? this.state.invoices:null}\n                    </tbody>\n                </Table>\n\n            </div >\n\n\n        );\n    }\n}\nexport default sm_invoices;"]},"metadata":{},"sourceType":"module"}