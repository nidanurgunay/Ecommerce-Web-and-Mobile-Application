{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nidanurgunay/Desktop/cs308/e-commerce-frontend/src/product_manager_comments.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport tracker from '../src/api/tracker';\nimport Table from 'react-bootstrap/Table';\nimport 'react-pro-sidebar/dist/css/styles.css';\n\nclass product_manager_comments extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = async () => {\n      try {\n        const response = await tracker.get(\"comment/all\");\n        console.log(\"all comments response: \", response);\n        await this.setState({\n          comments: response.data\n        });\n        console.log(this.state.comments);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.Validate = async (product, id, user, rating, text, totalrating, index, i, j) => {\n      try {\n        console.log(\"validate\");\n        console.log(\"id\", id);\n        console.log(\"pro\", product);\n        console.log(\"i\", i);\n        console.log(\"j\", j);\n        console.log(\"comments\", this.state.comments);\n        const paramid = this.state.comments[i]._id;\n        const reqid = this.state.comments[i].comments[j]._id;\n        console.log(\"iparamid\", paramid);\n        console.log(\"reqid\", reqid);\n        const response = await tracker.put(\"/comment/validate/\" + paramid, {\n          id: reqid\n        });\n        console.log(\"val\", response);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.getInvalidComments = () => {\n      console.log(\"getInvalidComments\");\n      var invalidComments = [];\n      var count = -1;\n\n      if (this.state.comments.length !== 0) {\n        console.log(\"comments are not null\");\n        var comment;\n\n        for (var i = 0; i < this.state.comments.length; i++) {\n          console.log(this.state.comments[i]);\n          var product = this.state.comments[i]._id;\n          var totalrating = this.state.comments[i].totalRate;\n\n          for (var j = 0; j < this.state.comments[i].comments.length; j++) {\n            var isValid = this.state.comments[i].comments[j].isValid;\n            var id = 0;\n            var user = 0;\n            var rating = 0;\n            var text = \"\";\n            const loci = i;\n            const locj = j;\n\n            if (isValid === false) {\n              id = this.state.comments[i].comments[j]._id;\n              user = this.state.comments[i].comments[j].user;\n              rating = this.state.comments[i].comments[j].rating;\n              text = this.state.comments[i].comments[j].text;\n              count++;\n              comment = /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: product\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: rating\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"notify\",\n                  for: \"cb\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    onClick: () => this.Validate(product, id, user, rating, text, totalrating, count, loci, locj)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 65\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 29\n              }, this);\n              invalidComments.push(comment);\n            }\n          }\n        }\n\n        return invalidComments;\n      }\n    };\n\n    this.state = {\n      comments: [] //       invalidcomments: [],\n\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        responsive: true,\n        striped: true,\n        bordered: true,\n        hover: true,\n        variant: \"dark\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Rating\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Validate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.getInvalidComments()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default product_manager_comments;","map":{"version":3,"sources":["/Users/nidanurgunay/Desktop/cs308/e-commerce-frontend/src/product_manager_comments.js"],"names":["React","Component","tracker","Table","product_manager_comments","constructor","componentDidMount","response","get","console","log","setState","comments","data","state","e","Validate","product","id","user","rating","text","totalrating","index","i","j","paramid","_id","reqid","put","getInvalidComments","invalidComments","count","length","comment","totalRate","isValid","loci","locj","push","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport tracker from '../src/api/tracker';\nimport Table from 'react-bootstrap/Table';\nimport 'react-pro-sidebar/dist/css/styles.css';\nclass product_manager_comments extends Component {\n    constructor() {\n\n        super();\n\n        this.state = {\n            comments: [],\n     //       invalidcomments: [],\n        }\n\n    }\n    componentDidMount = async () => {\n        try {\n            \n            const response = await tracker.get(\"comment/all\");\n            console.log(\"all comments response: \", response);\n            await this.setState({ comments: response.data });\n            console.log(this.state.comments);\n\n        } catch (e) {\n            console.log(e);\n        }\n\n    }\n    \n    Validate = async (product, id, user, rating, text, totalrating, index,i,j) => {\n        try {\n            console.log(\"validate\");\n           console.log(\"id\",id)\n           console.log(\"pro\", product)\n           console.log(\"i\",i)\n           console.log(\"j\", j)\n           console.log(\"comments\", this.state.comments)\n           const paramid= this.state.comments[i]._id;\n           const reqid=this.state.comments[i].comments[j]._id;\n           console.log(\"iparamid\",paramid)\n           console.log(\"reqid\", reqid)\n            const response = await tracker.put(\"/comment/validate/\" + paramid, {\n                id:reqid\n  \n            });\n            console.log(\"val\", response);\n\n        } catch (e) {\n            console.log(e);\n        }\n    }\n    \n    getInvalidComments = () => {\n        console.log(\"getInvalidComments\");\n        var invalidComments = [];\n        var count = -1;\n        if (this.state.comments.length !== 0) {\n            console.log(\"comments are not null\");\n            var comment;\n            for (var i = 0; i < this.state.comments.length; i++) {\n                console.log(this.state.comments[i]);\n                var product = this.state.comments[i]._id;\n                var totalrating = this.state.comments[i].totalRate;\n                for (var j = 0; j < this.state.comments[i].comments.length; j++) {\n                    var isValid = this.state.comments[i].comments[j].isValid;\n                    var id=0;\n                    var user=0;\n                    var rating=0;\n                    var text=\"\";\n                    const loci=i;\n                    const locj=j;\n                    if (isValid === false) {\n                        id = this.state.comments[i].comments[j]._id;\n                        user = this.state.comments[i].comments[j].user;\n                        rating = this.state.comments[i].comments[j].rating;\n                        text = this.state.comments[i].comments[j].text;\n                        count++;\n                        comment = (\n                            <tr>\n                                <td>{product}</td>\n                                <td>{id}</td>\n                                <td>{user}</td>\n                                <td>{rating}</td>\n                                <td>{text}</td>\n                                <td className='notify' for='cb'><input type=\"checkbox\" onClick={() => this.Validate(product, id, user, rating, text, totalrating, count, loci, locj)} /></td>\n                            </tr>\n\n                        );\n                        invalidComments.push(comment);\n                    }\n                }\n            }\n            return invalidComments;\n        }\n     \n    \n    };\n    render() {\n        return (\n            <div>\n                   \n                <Table responsive striped bordered hover variant=\"dark\">\n                    <thead>\n                        <tr>\n                            <td>Product</td>\n                            <td>Id</td>\n                            <td>User</td>\n                            <td>Rating</td>\n                            <td>Text</td>\n                            <td>Validate</td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                     \n                        {this.getInvalidComments()}\n                    </tbody>\n                        </Table>\n            \n            </div>\n\n        );\n    }\n\n}\nexport default product_manager_comments;"]},"metadata":{},"sourceType":"module"}