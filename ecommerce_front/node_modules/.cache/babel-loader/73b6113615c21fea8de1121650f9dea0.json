{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nidanurgunay/Desktop/cs308/e-commerce-frontend/src/sales_manager.js\";\nimport tracker from '../src/api/tracker';\nimport React, { Component } from 'react';\nimport CanvasJSReact from './canvasjs.react';\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nclass sales_manager extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = async () => {\n      try {\n        const response = await tracker.get(\"product/all\");\n        const arrayproduct = response.data;\n        await this.setState({\n          product: arrayproduct\n        });\n        console.log(\"state\", this.state.product);\n        var products = [];\n\n        if (this.state.product.length !== 0) {\n          var productitem;\n\n          for (var i = 0; i < this.state.product.length; i++) {\n            console.log(this.state.product[i]);\n            const quantity = this.state.product[i].countInStock;\n            const name = this.state.product[i].name;\n            productitem = {\n              label: name,\n              y: quantity\n            };\n            products.push(productitem);\n          }\n\n          await this.setState({\n            quantity_product: products\n          });\n          debugger;\n          const order_response = await tracker.get(\"order/all\");\n          const orderarray = order_response.data;\n          await this.setState({\n            orders: orderarray\n          });\n\n          if (this.state.orders.length !== 0) {\n            var invoices = [];\n            console.log(this.state.orders);\n            var item;\n            var options = {\n              year: 'numeric',\n              month: 'long',\n              day: 'numeric'\n            };\n\n            for (var i = 0; i < this.state.orders.length; i++) {\n              var date = this.state.orders[i].createdAt;\n              const basketid = this.state.orders[i].basket;\n              const res = await tracker.get('/basket/' + basketid);\n              console.log(res);\n              const totalprice = res.data.productList.totalprice;\n              /*const product_array = res.data.productList.productArray;\n              for (var i = 0; i < product_array.length; i++) {\n                  const pid = product_array[i].product;\n              }*/\n\n              console.log(typeof date);\n              date = date.substring(0, 10);\n              item = {\n                x: date,\n                y: totalprice\n              };\n              console.log(date);\n              console.log(item.x);\n              console.log(item.y);\n              const exists = false;\n\n              if (invoices.length > 0) {\n                for (var i = 0; i < invoices.length & !exists; i++) {\n                  if (invoices[i].x === item.x) {\n                    invoices[i].y = invoices[i].y + item.y;\n                    exists = true;\n                  }\n                }\n\n                if (!exists) {\n                  invoices.push(item);\n                }\n              } else {\n                invoices.push(item);\n              }\n            }\n\n            await this.setState({\n              dataPoints: invoices\n            });\n          }\n        }\n      } catch (e) {}\n    };\n\n    this.state = {\n      product: [],\n      quantity_product: [],\n      orders: [],\n      dataPoints: []\n    };\n  }\n\n  /*  handleQuantityData = () => {\n        console.log(\"handleQuantityData\");\n        var product = [];\n        if (this.state.product.length !== 0) {\n            var productitem;\n             for (var i = 0; i < this.state.product.length; i++) {\n                console.log(this.state.product[i]);\n                const quantity = this.state.product[i].countInStock;\n                const name = this.state.product[i].name;\n                productitem = { label: name, y: quantity };\n                product.push(productitem);\n             }\n            console.log(product);\n            return product;\n        }\n    }; */\n  render() {\n    const option_column = {\n      animationEnabled: true,\n      exportEnabled: true,\n      theme: \"light2\",\n      // \"light1\", \"dark1\", \"dark2\"\n      title: {\n        text: \"Products and Their Quantities\"\n      },\n      data: [{\n        // Change type to \"doughnut\", \"line\", \"splineArea\", etc.\n        type: \"column\",\n        dataPoints: this.state.quantity_product\n      }]\n    };\n    const option_line = {\n      animationEnabled: true,\n      exportEnabled: true,\n      theme: \"light2\",\n      // \"light1\", \"dark1\", \"dark2\"\n      title: {\n        text: \"Sales Rate Day by Day\"\n      },\n      axisY: {\n        title: \"Sales Rate\",\n        suffix: \"%\"\n      },\n      axisX: {\n        title: \"Dates\",\n        prefix: \"D\",\n        interval: 2\n      },\n      data: [{\n        type: \"line\",\n        toolTipContent: \"Day {x}: {y}%\",\n        dataPoints: this.state.dataPoints\n      }]\n    };\n    const options = {\n      animationEnabled: true,\n      exportEnabled: true,\n      theme: \"light2\",\n      // \"light1\", \"dark1\", \"dark2\"\n      title: {\n        text: \"Sales of Categories\"\n      },\n      data: [{\n        type: \"pie\",\n        indexLabel: \"{label}: {y}%\",\n        startAngle: -90,\n        dataPoints: [{\n          y: 20,\n          label: \"Airfare\"\n        }, {\n          y: 24,\n          label: \"Food & Drinks\"\n        }, {\n          y: 20,\n          label: \"Accomodation\"\n        }, {\n          y: 14,\n          label: \"Transportation\"\n        }, {\n          y: 12,\n          label: \"Activities\"\n        }, {\n          y: 10,\n          label: \"Misc\"\n        }]\n      }]\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(CanvasJSChart, {\n          options: option_line\n          /* onRef={ref => this.chart = ref} */\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(CanvasJSChart, {\n          options: option_column\n          /* onRef={ref => this.chart = ref} */\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(CanvasJSChart, {\n          options: options\n          /* onRef={ref => this.chart = ref} */\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default sales_manager;","map":{"version":3,"sources":["/Users/nidanurgunay/Desktop/cs308/e-commerce-frontend/src/sales_manager.js"],"names":["tracker","React","Component","CanvasJSReact","CanvasJS","CanvasJSChart","sales_manager","constructor","componentDidMount","response","get","arrayproduct","data","setState","product","console","log","state","products","length","productitem","i","quantity","countInStock","name","label","y","push","quantity_product","order_response","orderarray","orders","invoices","item","options","year","month","day","date","createdAt","basketid","basket","res","totalprice","productList","substring","x","exists","dataPoints","e","render","option_column","animationEnabled","exportEnabled","theme","title","text","type","option_line","axisY","suffix","axisX","prefix","interval","toolTipContent","indexLabel","startAngle"],"mappings":"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","sourcesContent":["\nimport tracker from '../src/api/tracker';\nimport React, { Component } from 'react';\nimport CanvasJSReact from './canvasjs.react';\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nclass sales_manager extends Component {\n    constructor() {\n        super()\n        this.state = {\n            product: [],\n            quantity_product: [],\n            orders: [],\n            dataPoints:[]\n        }\n    }\n    componentDidMount = async () => {\n        try {\n            const response = await tracker.get(\"product/all\");\n            const arrayproduct = response.data;\n            await this.setState({ product: arrayproduct });\n            console.log(\"state\", this.state.product);\n\n            var products = [];\n            if (this.state.product.length !== 0) {\n                var productitem;\n\n                for (var i = 0; i < this.state.product.length; i++) {\n                    console.log(this.state.product[i]);\n                    const quantity = this.state.product[i].countInStock;\n                    const name = this.state.product[i].name;\n                    productitem = { label: name, y: quantity };\n                    products.push(productitem);\n\n                }\n                await this.setState({ quantity_product: products });\n                debugger;\n                const order_response = await tracker.get(\"order/all\");\n                const orderarray = order_response.data;\n                await this.setState({ orders: orderarray });\n                if (this.state.orders.length !== 0) {\n                    var invoices = [];\n\n                    console.log(this.state.orders);\n                    var item;\n                    var options = { year: 'numeric', month: 'long', day: 'numeric' };\n                    for (var i = 0; i < this.state.orders.length; i++) {\n                        var date = this.state.orders[i].createdAt;\n                        const basketid = this.state.orders[i].basket;\n                        const res = await tracker.get('/basket/' + basketid);\n\n                        console.log(res);\n                        const totalprice = res.data.productList.totalprice;\n                        /*const product_array = res.data.productList.productArray;\n                        for (var i = 0; i < product_array.length; i++) {\n                            const pid = product_array[i].product;\n                        }*/\n                        console.log(typeof date);\n                        date = date.substring(0, 10);\n                        item = { x: date, y: totalprice };\n                        console.log(date);\n                        console.log(item.x);\n                        console.log(item.y);\n                        const exists = false;\n                        if (invoices.length > 0) {\n                            for (var i = 0; i < invoices.length & !exists; i++) {\n                                if (invoices[i].x === item.x) {\n                                    invoices[i].y = invoices[i].y + item.y;\n                                    exists = true;\n                                    \n                                }\n                            }\n                            if (!exists) {\n                                invoices.push(item);\n                            }\n                        }\n                        else {\n                            invoices.push(item);\n                        }\n                    }\n                    await this.setState({ dataPoints: invoices });\n                }\n            }\n        } catch (e) { }\n\n    }\n  /*  handleQuantityData = () => {\n        console.log(\"handleQuantityData\");\n        var product = [];\n        if (this.state.product.length !== 0) {\n            var productitem;\n\n            for (var i = 0; i < this.state.product.length; i++) {\n                console.log(this.state.product[i]);\n                const quantity = this.state.product[i].countInStock;\n                const name = this.state.product[i].name;\n                productitem = { label: name, y: quantity };\n                product.push(productitem);\n\n            }\n            console.log(product);\n            return product;\n        }\n    }; */\n    render() {\n        const option_column = {\n            animationEnabled: true,\n            exportEnabled: true,\n            theme: \"light2\", // \"light1\", \"dark1\", \"dark2\"\n            title: {\n                text: \"Products and Their Quantities\"\n            },\n            data: [\n                {\n                    // Change type to \"doughnut\", \"line\", \"splineArea\", etc.\n                    type: \"column\",\n                    dataPoints: this.state.quantity_product\n                }\n            ]\n        }\n\n\n\n        const option_line = {\n            animationEnabled: true,\n            exportEnabled: true,\n            theme: \"light2\", // \"light1\", \"dark1\", \"dark2\"\n            title: {\n                text: \"Sales Rate Day by Day\"\n            },\n            axisY: {\n                title: \"Sales Rate\",\n                suffix: \"%\"\n            },\n            axisX: {\n                title: \"Dates\",\n                prefix: \"D\",\n                interval: 2\n            },\n            data: [{\n                type: \"line\",\n                toolTipContent: \"Day {x}: {y}%\",\n                dataPoints: this.state.dataPoints\n            }]\n        }\n\n        const options = {\n            animationEnabled: true,\n            exportEnabled: true,\n            theme: \"light2\", // \"light1\", \"dark1\", \"dark2\"\n            title: {\n                text: \"Sales of Categories\"\n            },\n            data: [{\n                type: \"pie\",\n                indexLabel: \"{label}: {y}%\",\n                startAngle: -90,\n                dataPoints: [\n                    { y: 20, label: \"Airfare\" },\n                    { y: 24, label: \"Food & Drinks\" },\n                    { y: 20, label: \"Accomodation\" },\n                    { y: 14, label: \"Transportation\" },\n                    { y: 12, label: \"Activities\" },\n                    { y: 10, label: \"Misc\" }\n                ]\n            }]\n        }\n\n        return (\n            <>\n            <div>\n                <CanvasJSChart options={option_line}\n                /* onRef={ref => this.chart = ref} */\n                />\n                {/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\n            </div>\n<br/>\n\n            <div>\n                <CanvasJSChart options={option_column}\n                /* onRef={ref => this.chart = ref} */\n                />\n                {/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\n                </div>\n\n\n                <div>\n                    <CanvasJSChart options={options}\n                    /* onRef={ref => this.chart = ref} */\n                    />\n                    {/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\n                </div>\n            </>\n\n\t\t);\n    }\n}\nexport default sales_manager;"]},"metadata":{},"sourceType":"module"}