/**
 * Generate a base32 encoded secret of 32 bytes
 */
export declare function generateSecret(): Promise<string>;
export interface GetQRCodeOptions {
    /**
     * base32 encoded secret
     */
    secret: string;
    /**
     * Used to identify the account with which the secret key is associated,
     * e.g. for an app called "MyApp" and a user with the email "user@example.com":
     *
     * "MyApp:user@example.com"
     */
    label: string;
    /**
     * The provider or service with which the secret key is associated.
     */
    issuer?: string;
}
export declare function getQRCodeSVG(options: GetQRCodeOptions): Promise<string>;
export declare function getQRCodeURI(options: GetQRCodeOptions): Promise<string>;
export interface VerifyOptions {
    /**
     * base32 encoded secret
     */
    secret: string;
    /**
     * The token to verify
     */
    token: string;
    /**
     * How old is a token allowed to be.
     *
     * This defaults to 1, which allows a token from the previous
     * or next 30 second window. You can set it to 0 to only allow
     * the current window, or to a higher number to be more tollerant
     * of old tokens.
     */
    window?: number;
}
export declare function verifyToken(options: VerifyOptions): boolean;
export interface GenerateTokenOptions {
    /**
     * base32 encoded secret
     */
    secret: string;
}
export declare function generateToken(options: GenerateTokenOptions): string;
